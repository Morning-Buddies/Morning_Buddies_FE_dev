import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:morning_buddies/utils/design_palette.dart';

class SubscriptionScreen extends StatefulWidget {
  const SubscriptionScreen({super.key});

  @override
  State<SubscriptionScreen> createState() => _SubscriptionScreenState();
}

class _SubscriptionScreenState extends State<SubscriptionScreen> {
  @override
  Widget build(BuildContext context) {
    final screenHeight = MediaQuery.of(context).size.height;

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text("Subscribe",
            style: TextStyle(fontWeight: FontWeight.bold)),
        backgroundColor: Colors.white,
      ),
      body: Column(
        children: [
          const Divider(),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              children: [
                _buildSubscriptionPlanButton(
                  context,
                  screenHeight,
                  planName: "Monthly Plan",
                  amount: 10.00,
                  duration: const Duration(days: 30),
                ),
                const SizedBox(height: 4),
                _buildSubscriptionPlanButton(
                  context,
                  screenHeight,
                  planName: "Annual Plan",
                  amount: 100.00,
                  duration: const Duration(days: 365),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildSubscriptionPlanButton(
    BuildContext context,
    double screenHeight, {
    required String planName,
    required double amount,
    required Duration duration,
  }) {
    final formattedDate = DateFormat('d, MMMM, yyyy').format(DateTime.now());
    /*
      üí° Ïù¥Î∂ÄÎ∂Ñ Î°úÏßÅ Î∂ÑÎ¶¨Í∞Ä Ï∂îÌõÑÏóê ÌïÑÏöîÌï©ÎãàÎã§.
      Ïã†Í∑ú Í∞ÄÏûÖ -> Îã®ÏàúÌûà 30/365Î•º ÎçîÌï®
      Í∞±Ïã† -> Î≥¥Ïú† ÎÇ†ÏßúÏóê 30/365Î•º ÎçîÌï®
      ÏùºÎã® Ïã†Í∑úÍ∞ÄÏûÖ CaseÎßå Íµ¨ÌòÑÌï¥ÎëêÍ≥†, Ï∂îÌõÑÏóê API ÎÇòÏò§Î©¥ Î°úÏßÅ Î∂ÑÎ¶¨ ÌïòÍ≤†ÏäµÎãàÎã§.
    */
    final endDate = DateTime.now().add(duration);
    final formattedEndDate = DateFormat('d, MMMM, yyyy').format(endDate);

    return _SubscriptionPlanButton(
      planName: planName,
      amount: "\$${amount.toStringAsFixed(2)}",
      begins: formattedDate,
      ends: formattedEndDate,
      onPressed: () => _showSubscriptionBottomSheet(
        context,
        screenHeight,
        amount: amount,
        begins: formattedDate,
        ends: formattedEndDate,
      ),
    );
  }

  // Î™®Îã¨ Î∞îÌÖÄ ÏãúÌä∏ ÌëúÏãú Ìï®Ïàò
  void _showSubscriptionBottomSheet(
    BuildContext context,
    double screenHeight, {
    required double amount,
    required String begins,
    required String ends,
  }) {
    showModalBottomSheet(
      context: context,
      builder: (context) => _SubscriptionBottomSheet(
        screenHeight: screenHeight,
        amount: amount,
        begins: begins,
        ends: ends,
      ),
    );
  }
}

// Íµ¨ÎèÖ ÌîåÎûú Î≤ÑÌäº ÏúÑÏ†Ø
class _SubscriptionPlanButton extends StatelessWidget {
  final String planName;
  final String amount;
  final String begins;
  final String ends;
  final VoidCallback onPressed;

  const _SubscriptionPlanButton({
    required this.planName,
    required this.amount,
    required this.begins,
    required this.ends,
    required this.onPressed,
  });

  @override
  Widget build(BuildContext context) {
    return OutlinedButton(
      onPressed: onPressed,
      style: OutlinedButton.styleFrom(
        minimumSize: const Size(360, 100),
        foregroundColor: Colors.black,
        backgroundColor: ColorStyles.orange,
        side: BorderSide.none,
        shape:
            RoundedRectangleBorder(borderRadius: BorderRadius.circular(16.0)),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(planName, style: Constants.titleTextStyle),
          Text(amount, style: Constants.titleTextStyle),
        ],
      ),
    );
  }
}

// Î™®Îã¨ Î∞îÌÖÄ ÏãúÌä∏ ÏúÑÏ†Ø
class _SubscriptionBottomSheet extends StatelessWidget {
  final double screenHeight;
  final double amount;
  final String begins;
  final String ends;

  const _SubscriptionBottomSheet({
    Key? key,
    required this.screenHeight,
    required this.amount,
    required this.begins,
    required this.ends,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      height: screenHeight * 0.7,
      decoration: const BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(30),
          topRight: Radius.circular(30),
        ),
      ),
      child: Padding(
        padding: const EdgeInsets.all(24.0),
        child: ListView(
          children: [
            const Padding(
              padding: EdgeInsets.all(16.0),
              child: Text(Constants.descriptionText),
            ),
            ListTile(
              title: const Text("Month", style: Constants.infoTitleStyle),
              trailing: Text(DateFormat('MMMM').format(DateTime.now()),
                  style: Constants.amountTextStyle),
            ),
            ListTile(
              title: const Text("Amount", style: Constants.infoTitleStyle),
              trailing: Text("Amount-\$${amount.toStringAsFixed(2)}",
                  style: Constants.amountTextStyle),
            ),
            ListTile(
              title: const Text("Begins", style: Constants.infoTitleStyle),
              trailing: Text(begins, style: Constants.amountTextStyle),
            ),
            ListTile(
              title: const Text("Ends", style: Constants.infoTitleStyle),
              trailing: Text(ends, style: Constants.amountTextStyle),
            ),
            const ListTile(
              title: Text("Type", style: Constants.infoTitleStyle),
              trailing: Text("Standard", style: Constants.amountTextStyle),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                OutlinedButton(
                  style: OutlinedButton.styleFrom(
                    minimumSize: const Size(172, 47),
                    foregroundColor: ColorStyles.secondaryOrange,
                    backgroundColor: Colors.white,
                    side: const BorderSide(
                        width: 2.0, color: ColorStyles.secondaryOrange),
                  ),
                  onPressed: () {},
                  child: const Text('Renew'),
                ),
                OutlinedButton(
                  style: OutlinedButton.styleFrom(
                    minimumSize: const Size(172, 47),
                    foregroundColor: Colors.white,
                    backgroundColor: ColorStyles.secondaryOrange,
                    side: const BorderSide(
                        width: 2.0, color: ColorStyles.secondaryOrange),
                  ),
                  onPressed: () {},
                  child: const Text('Cancel'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class Constants {
  Constants._(); // private ÏÉùÏÑ±ÏûêÎ•º ÌÜµÌï¥ Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ± Î∞©ÏßÄ

  static const titleTextStyle =
      TextStyle(fontWeight: FontWeight.bold, fontSize: 16);
  static const descriptionText =
      "Morning Buddies is here to support what you want and what you need to achieve. You can join in any group no matter how many you want while subscribing. Morning Buddies are now happy to welcome your will!";
  static const amountTextStyle = TextStyle(fontSize: 12);
  static const infoTitleStyle = TextStyle(
    color: ColorStyles.secondaryOrange,
    fontWeight: FontWeight.bold,
  );
}
